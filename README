
Source:
    https://projects.bytemark.co.uk/projects/custodian

Github Mirror:
    https://github.com/BytemarkHosting/custodian


Copyright:
    Copyright (c) 2012-2015 Bytemark Computer Consulting Ltd

Bug Tracker:
    https://projects.bytemark.co.uk/projects/custodian/issues/new

Licence:
    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 2 of the License, or
    (at your option) any later version.




About Custodian
---------------

Custodian is a simple, scalable, and reliable protocol-tester that allows
a number of services to be tested across a network.

The core design is based upon a work queue, which is manipulated by two
main tools:

  custodian-enqueue
    * A parser that reads a list of hosts and tests to apply.  These
      tests are broken down into individual jobs, serialized and stored
      in a central queue.

  custodian-dequeue
    * A tool that pulls jobs from the queue, executing them in turn, and
      raises/clears alerts based upon the result of the test.


Custodian uses class-factories to ensure that protocol tests, and notification
objects, are only loosely tied to the core.  This is done so that custodian
may be extended or adapted more easily to your environment.



Configuration
-------------

The software is configured by the main configuration file located at:

   /etc/custodian/custodian.cfg

This file contains the alerting mechanism to use, the IP:port of the queue
the two scripts mentioned above use, and similar static things.

Each of the available configuration options has a sensible default which
is documented in that same file.



Dependencies
------------

The software is written in Ruby and has successfully been deployed in
production under:

* Ruby 1.8
* Ruby 1.9.x
* Ruby 2.1.x

The software has not yet been tested upon JRuby, or similar.

Dependencies, beyond ruby, are limited to the following gems:

* For HTTP/HTTPS testing: curb
* For communication with the queue: redis / beanstalkd-client

(You don't need to install both redis and beanstalkd, just install
the appropriate one for your preferences.)



Formatting
----------

Our code is formatted and tested with [rubodoc](https://github.com/bbatsov/rubocop).

Code should not be committed to the repository which results in warnings
or errors from the current `.rubodoc` configuration file.



Documentation
-------------

The software is documented online at the project home-page:

    https://projects.bytemark.co.uk/projects/custodian/wiki

Beyond that each script has a manpage which is installed when the
package is installed - or which may be examined by invoking the
script with the "--manual" flag.
